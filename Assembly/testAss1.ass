MOVIR R0 0.0
MOVIR R1 4.0
MOVIR R2 1.0
DATA 10
DATA 0
DATA 0
DATA 0
JMP Lmain
Lmain: ; ~Lmain
 ; BeginFunc 140
MOVIR R4 5.0 ; _t4 = 5.0
SUBR R3 R0 R4 ; _t3 = _t0 - _t4
WRR R3 ; write _t3
WRS 0 ; writeln
MOVIR R4 4.0 ; _t4 = 4.0
MOVIR R5 3.0 ; _t5 = 3.0
ADDR R3 R4 R5 ; _t3 = _t4 + _t5
WRR R3 ; write _t3
WRS 0 ; writeln
MOVIR R5 1.0 ; _t5 = 1.0
MOVIR R7 2.0 ; _t7 = 2.0
MOVIR R9 6.0 ; _t9 = 6.0
SUBR R8 R0 R9 ; _t8 = _t0 - _t9
MULR R6 R7 R8 ; _t6 = _t7 * _t8
ADDR R4 R5 R6 ; _t4 = _t5 + _t6
MOVIR R6 20.0 ; _t6 = 20.0
MOVIR R7 4.0 ; _t7 = 4.0
DIVR R5 R6 R7 ; _t5 = _t6 / _t7
SUBR R3 R4 R5 ; _t3 = _t4 - _t5
WRR R3 ; write _t3
WRS 0 ; writeln
MOVIR R4 0.5 ; _t4 = 0.5
SUBR R3 R0 R4 ; _t3 = _t0 - _t4
WRR R3 ; write _t3
WRS 0 ; writeln
MOVIR R5 0.4 ; _t5 = 0.4
SUBR R4 R0 R5 ; _t4 = _t0 - _t5
MOVIR R5 0.3 ; _t5 = 0.3
SUBR R3 R4 R5 ; _t3 = _t4 - _t5
WRR R3 ; write _t3
WRS 0 ; writeln
MOVIR R6 0.1 ; _t6 = 0.1
MOVIR R8 0.25 ; _t8 = 0.25
MOVIR R9 0.05 ; _t9 = 0.05
ADDR R7 R8 R9 ; _t7 = _t8 + _t9
DIVR R5 R6 R7 ; _t5 = _t6 / _t7
MOVIR R7 0.2 ; _t7 = 0.2
MOVIR R9 6.0 ; _t9 = 6.0
SUBR R8 R0 R9 ; _t8 = _t0 - _t9
MULR R6 R7 R8 ; _t6 = _t7 * _t8
ADDR R4 R5 R6 ; _t4 = _t5 + _t6
MOVIR R6 0.2 ; _t6 = 0.2
MOVIR R7 0.4 ; _t7 = 0.4
DIVR R5 R6 R7 ; _t5 = _t6 / _t7
SUBR R3 R4 R5 ; _t3 = _t4 - _t5
WRR R3 ; write _t3
WRS 0 ; writeln
 ; EndFunc
HALT
